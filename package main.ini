package main

import (
	"bufio"
	"fmt"
	"os"
	"regexp"
	"strings"
	"unicode"
)

type Text struct {
	Content string
}

func (t *Text) textModifier() string {
	var sum = 0
	var result strings.Builder
	fmt.Println("полученный текст - " + t.Content)

	// A. Обработка пробелов: заменяем несколько пробелов на один
	t.Content = strings.Join(strings.Fields(t.Content), " ")
	re := regexp.MustCompile(`\s+`)
	t.Content = re.ReplaceAllString(t.Content, " ")
	fmt.Println("после обработки пробелов - " + t.Content)

	// B. Заменить множественные дефисы на единичные
	re = regexp.MustCompile("-+")
	t.Content = re.ReplaceAllString(t.Content, "-")
	fmt.Println("после удаления дублирующих дефисов - " + t.Content)

	// Преобразуем строку в срез рун
	runes := []rune(t.Content)
	runes = append(runes, ' ') // Добавляем пробел в конец среза
	strLength := len(runes)

	// Проходим по всем рунам строки
	for i := 1; i < strLength; i++ {
		if runes[i] == '-' { // если наткнулись на -
			if i > 0 { // если слева есть символ
				if i < strLength-1 { // если справа есть символ
					fmt.Printf("%d:'%c%c%c' ---> '%c%c'\n", i, runes[i-1], runes[i], runes[i+1], runes[i+1], runes[i-1])
					result.WriteRune(runes[i+1])
					result.WriteRune(runes[i-1])
					i += 2
				} else {
					fmt.Printf("строка состоит из одного тире")
				}
			} else {
				fmt.Printf("%d:'%c'\n", i, runes[i+1])
				result.WriteRune(runes[i+1])
				i += 1
			}

			// C. Заменить знаки + на !
		} else if runes[i-1] == '+' {
			fmt.Printf("%d:'%c'\n", i, runes[i-1])
			result.WriteRune('!')
			//D. Суммируем попадающиеся цифры
		} else if unicode.IsDigit(runes[i-1]) {
			sum += int(runes[i-1] - '0')
			fmt.Printf("Найдена цифра :'%c'Сумма всех встретившихся цифр равна = %d \n", runes[i-1], sum)

		} else {
			fmt.Printf("%d:'%c'\n", i, runes[i-1])
			result.WriteRune(runes[i-1])
		}
	}

	// Добавляем сумму в конец среза как руну
	fmt.Println("Сумма всех встречающихся цифр равна =", sum)
	result.WriteString(fmt.Sprintf("%d", sum))
	return result.String()
}

func main() {
	text := &Text{}
	// Создаем новый сканер для чтения из стандартного ввода
	scanner := bufio.NewScanner(os.Stdin)

	// Просим пользователя ввести строку
	fmt.Println("Введите строку:")

	for scanner.Scan() {
		text.Content = scanner.Text()
		fmt.Println(text.textModifier())
	}
}


